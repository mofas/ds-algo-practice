/**
 * @param {number} n
 * @param {number[][]} flights
 * @param {number} src
 * @param {number} dst
 * @param {number} K
 * @return {number}
 */

// BFS version
// slow
// timeout at test case 27
// var findCheapestPrice = function(n, flights, src, dst, K) {
//   const travelMapping = {};
//   const priceMapping = {};
//   flights.forEach(([from, to, price]) => {
//     priceMapping[`${from}-${to}`] = price;
//     if (!travelMapping[from]) travelMapping[from] = [];
//     travelMapping[from].push(to);
//   });

//   const dfs = (place, spent, remain) => {
//     if (remain > 0) {
//       let nextSpent = dfs(place, spent, remain - 1);
//       for (let i = 0; i < (travelMapping[place] || []).length; i++) {
//         nextSpent = Math.min(
//           nextSpent,
//           dfs(
//             travelMapping[place][i],
//             spent + priceMapping[`${place}-${travelMapping[place][i]}`],
//             remain - 1
//           )
//         );
//       }
//       return nextSpent;
//     } else {
//       if (priceMapping[`${place}-${dst}`])
//         return spent + priceMapping[`${place}-${dst}`];
//       else return Infinity;
//     }
//   };

//   const ret = dfs(src, 0, K);
//   return ret === Infinity ? -1 : ret;
// };

// BFS version 2
// 480ms
var findCheapestPrice = function(n, flights, src, dst, K) {
  const travelMapping = {};
  const priceMapping = {};
  flights.forEach(([from, to, price]) => {
    priceMapping[`${from}-${to}`] = price;
    if (!travelMapping[from]) travelMapping[from] = [];
    travelMapping[from].push(to);
  });

  if (K === 0) return priceMapping[`${src}-${dst}`] || -1;

  let spentMapping = new Array(n).fill(Infinity);
  spentMapping[src] = 0;

  // console.log(priceMapping);
  // from , move, spent
  const queue = [[src, -1, 0]];

  while (queue.length > 0) {
    const [from, move, spent] = queue.shift();
    if (move >= K) continue;
    for (const j in travelMapping[from]) {
      const to = travelMapping[from][j];
      if (spentMapping[to] > spent + priceMapping[`${from}-${to}`]) {
        spentMapping[to] = spent + priceMapping[`${from}-${to}`];
        queue.push([to, move + 1, spentMapping[to]]);
      }
    }
    // console.log(queue, spentMapping);
  }

  // console.log('end', spentMapping);

  return spentMapping[dst] === Infinity ? -1 : spentMapping[dst];
};

// best sol from web
var findCheapestPrice = function(n, flights, src, dst, K) {
  let curr = Array(n).fill(Number.MAX_VALUE);
  curr[src] = 0;

  while (K-- >= 0) {
    let next = curr.slice();
    for (let [from, to, price] of flights) {
      next[to] = Math.min(next[to], curr[from] + price);
    }
    curr = next;
  }

  return curr[dst] === Number.MAX_VALUE ? -1 : curr[dst];
};

/**
-1
1
6
7
200
500
47
1884
6496
**/

console.log(
  findCheapestPrice(
    5,
    [[4, 1, 1], [1, 2, 3], [0, 3, 2], [0, 4, 10], [3, 1, 1], [1, 4, 3]],
    2,
    1,
    1
  )
);
// -1

console.log(findCheapestPrice(3, [[0, 1, 2], [1, 2, 1], [2, 0, 10]], 1, 2, 1));
// 1

console.log(
  findCheapestPrice(4, [[0, 1, 1], [0, 2, 5], [1, 2, 1], [2, 3, 1]], 0, 3, 1)
);
// 6

console.log(
  findCheapestPrice(
    5,
    [[0, 1, 5], [1, 2, 5], [0, 3, 2], [3, 1, 2], [1, 4, 1], [4, 2, 1]],
    0,
    2,
    2
  )
);
// 7

console.log(
  findCheapestPrice(3, [[0, 1, 100], [1, 2, 100], [0, 2, 500]], 0, 2, 1)
);
// 200

console.log(
  findCheapestPrice(3, [[0, 1, 100], [1, 2, 100], [0, 2, 500]], 0, 2, 0)
);
// 500

console.log(
  findCheapestPrice(
    17,
    [
      [0, 12, 28],
      [5, 6, 39],
      [8, 6, 59],
      [13, 15, 7],
      [13, 12, 38],
      [10, 12, 35],
      [15, 3, 23],
      [7, 11, 26],
      [9, 4, 65],
      [10, 2, 38],
      [4, 7, 7],
      [14, 15, 31],
      [2, 12, 44],
      [8, 10, 34],
      [13, 6, 29],
      [5, 14, 89],
      [11, 16, 13],
      [7, 3, 46],
      [10, 15, 19],
      [12, 4, 58],
      [13, 16, 11],
      [16, 4, 76],
      [2, 0, 12],
      [15, 0, 22],
      [16, 12, 13],
      [7, 1, 29],
      [7, 14, 100],
      [16, 1, 14],
      [9, 6, 74],
      [11, 1, 73],
      [2, 11, 60],
      [10, 11, 85],
      [2, 5, 49],
      [3, 4, 17],
      [4, 9, 77],
      [16, 3, 47],
      [15, 6, 78],
      [14, 1, 90],
      [10, 5, 95],
      [1, 11, 30],
      [11, 0, 37],
      [10, 4, 86],
      [0, 8, 57],
      [6, 14, 68],
      [16, 8, 3],
      [13, 0, 65],
      [2, 13, 6],
      [5, 13, 5],
      [8, 11, 31],
      [6, 10, 20],
      [6, 2, 33],
      [9, 1, 3],
      [14, 9, 58],
      [12, 3, 19],
      [11, 2, 74],
      [12, 14, 48],
      [16, 11, 100],
      [3, 12, 38],
      [12, 13, 77],
      [10, 9, 99],
      [15, 13, 98],
      [15, 12, 71],
      [1, 4, 28],
      [7, 0, 83],
      [3, 5, 100],
      [8, 9, 14],
      [15, 11, 57],
      [3, 6, 65],
      [1, 3, 45],
      [14, 7, 74],
      [2, 10, 39],
      [4, 8, 73],
      [13, 5, 77],
      [10, 0, 43],
      [12, 9, 92],
      [8, 2, 26],
      [1, 7, 7],
      [9, 12, 10],
      [13, 11, 64],
      [8, 13, 80],
      [6, 12, 74],
      [9, 7, 35],
      [0, 15, 48],
      [3, 7, 87],
      [16, 9, 42],
      [5, 16, 64],
      [4, 5, 65],
      [15, 14, 70],
      [12, 0, 13],
      [16, 14, 52],
      [3, 10, 80],
      [14, 11, 85],
      [15, 2, 77],
      [4, 11, 19],
      [2, 7, 49],
      [10, 7, 78],
      [14, 6, 84],
      [13, 7, 50],
      [11, 6, 75],
      [5, 10, 46],
      [13, 8, 43],
      [9, 10, 49],
      [7, 12, 64],
      [0, 10, 76],
      [5, 9, 77],
      [8, 3, 28],
      [11, 9, 28],
      [12, 16, 87],
      [12, 6, 24],
      [9, 15, 94],
      [5, 7, 77],
      [4, 10, 18],
      [7, 2, 11],
      [9, 5, 41]
    ],
    13,
    4,
    13
  )
);
// 47

console.log(
  findCheapestPrice(
    45,
    [
      [2, 4, 5567],
      [24, 25, 7950],
      [1, 24, 8341],
      [24, 5, 3363],
      [13, 29, 3271],
      [4, 15, 1609],
      [27, 33, 156],
      [5, 26, 3794],
      [42, 18, 7388],
      [8, 27, 4441],
      [12, 16, 3894],
      [15, 25, 7804],
      [0, 22, 5059],
      [4, 43, 4994],
      [37, 4, 3508],
      [5, 29, 5086],
      [42, 7, 2913],
      [44, 5, 8791],
      [29, 37, 2584],
      [20, 40, 3561],
      [9, 37, 6140],
      [37, 25, 5919],
      [10, 3, 5134],
      [11, 29, 6064],
      [35, 13, 917],
      [36, 40, 6418],
      [0, 11, 5784],
      [7, 41, 7011],
      [1, 32, 547],
      [44, 3, 4111],
      [23, 37, 4200],
      [14, 10, 7715],
      [40, 17, 1460],
      [20, 25, 3639],
      [14, 3, 8382],
      [41, 0, 4349],
      [36, 8, 9112],
      [14, 15, 2475],
      [25, 3, 1545],
      [38, 40, 5954],
      [8, 40, 7822],
      [11, 33, 8565],
      [15, 4, 8318],
      [34, 19, 8473],
      [23, 21, 4791],
      [39, 26, 7741],
      [44, 36, 74],
      [27, 31, 5245],
      [2, 40, 9985],
      [42, 14, 9190],
      [43, 15, 2178],
      [44, 21, 2066],
      [11, 42, 7570],
      [41, 38, 1772],
      [7, 2, 6575],
      [12, 27, 2512],
      [41, 30, 5846],
      [0, 28, 5182],
      [8, 32, 9011],
      [26, 38, 2322],
      [31, 25, 3155],
      [32, 15, 7336],
      [8, 12, 1312],
      [22, 26, 6047],
      [23, 15, 6825],
      [1, 31, 579],
      [16, 4, 763],
      [33, 44, 1011],
      [2, 35, 2916],
      [11, 35, 1670],
      [10, 11, 5084],
      [26, 9, 6428],
      [18, 30, 1345],
      [7, 27, 8480],
      [43, 4, 7858],
      [35, 17, 5196],
      [11, 24, 2405],
      [43, 1, 7518],
      [26, 34, 1030],
      [2, 42, 5690],
      [21, 25, 9422],
      [17, 30, 9737],
      [24, 41, 3957],
      [21, 1, 2438],
      [7, 10, 6808],
      [34, 23, 6582],
      [16, 44, 3692],
      [21, 35, 435],
      [7, 14, 9559],
      [32, 20, 274],
      [26, 18, 4143],
      [6, 4, 6636],
      [8, 9, 8483],
      [39, 23, 5556],
      [22, 5, 534],
      [25, 27, 9861],
      [14, 22, 402],
      [38, 30, 3406],
      [28, 33, 4638],
      [34, 5, 9827],
      [13, 15, 2614],
      [39, 40, 1083],
      [34, 44, 361],
      [5, 33, 2197],
      [24, 10, 9981],
      [28, 21, 6788],
      [7, 28, 3879],
      [35, 9, 1274],
      [25, 23, 3278],
      [7, 40, 8653],
      [30, 44, 1665],
      [6, 9, 9585],
      [3, 14, 929],
      [8, 18, 9559],
      [24, 38, 8324],
      [12, 26, 4623],
      [17, 13, 560],
      [41, 21, 2788],
      [35, 20, 3051],
      [15, 28, 8131],
      [30, 23, 2939],
      [11, 4, 1348],
      [7, 42, 5610],
      [34, 21, 3142],
      [42, 31, 1351],
      [28, 1, 9899],
      [25, 29, 3585],
      [15, 34, 461],
      [41, 43, 3136],
      [1, 11, 7868],
      [2, 43, 6009],
      [25, 43, 4986],
      [3, 31, 4948],
      [44, 16, 4635],
      [15, 6, 5840],
      [37, 27, 1059],
      [42, 0, 9558],
      [18, 21, 7638],
      [16, 34, 937],
      [29, 36, 7443],
      [1, 2, 8291],
      [6, 15, 5867],
      [44, 39, 6561],
      [21, 23, 7370],
      [10, 16, 5784],
      [11, 41, 7614],
      [16, 15, 1406],
      [10, 13, 2985],
      [42, 8, 8355],
      [42, 36, 6128],
      [26, 30, 3476],
      [30, 36, 4786],
      [33, 40, 561],
      [2, 9, 6397],
      [34, 8, 6292],
      [3, 39, 6920],
      [30, 31, 1161],
      [10, 0, 6262],
      [10, 33, 1534],
      [33, 36, 2385],
      [15, 7, 9848],
      [34, 18, 732],
      [3, 27, 3826],
      [29, 1, 4531],
      [9, 4, 6962],
      [4, 0, 793],
      [4, 37, 6485],
      [0, 40, 3368],
      [34, 22, 1690],
      [23, 17, 1983],
      [42, 13, 7729],
      [24, 26, 5284],
      [23, 38, 1291],
      [4, 44, 2841],
      [3, 22, 5048],
      [30, 12, 8645],
      [32, 43, 132],
      [33, 3, 5824],
      [41, 20, 5536],
      [18, 37, 4866],
      [24, 43, 1546],
      [21, 34, 5838],
      [36, 10, 2259],
      [31, 4, 2930],
      [28, 2, 5447],
      [0, 29, 8668],
      [44, 35, 3994],
      [4, 31, 235],
      [12, 0, 9785],
      [35, 1, 6276],
      [29, 32, 9206],
      [8, 5, 2948],
      [6, 26, 2735],
      [3, 40, 7533],
      [11, 9, 2175],
      [44, 24, 4438],
      [39, 28, 4834],
      [11, 0, 2532],
      [0, 23, 7274],
      [43, 30, 986],
      [13, 4, 4003],
      [5, 10, 446],
      [14, 0, 5055],
      [5, 0, 4470],
      [39, 16, 9252],
      [30, 3, 9620],
      [17, 29, 1285],
      [37, 26, 4025],
      [7, 8, 1383],
      [35, 3, 6273],
      [26, 12, 7665],
      [14, 34, 3475],
      [17, 34, 4922],
      [7, 18, 1025],
      [18, 4, 6608],
      [26, 33, 2199],
      [33, 25, 7559],
      [2, 11, 8173],
      [17, 14, 2362],
      [12, 35, 5981],
      [8, 17, 2280],
      [0, 34, 8119],
      [34, 7, 9390],
      [34, 9, 5480],
      [37, 24, 4320],
      [9, 11, 2960],
      [39, 17, 7016],
      [5, 19, 5382],
      [1, 4, 1286],
      [19, 27, 7282],
      [8, 36, 4807],
      [9, 35, 4611],
      [0, 17, 9964],
      [27, 20, 5661],
      [43, 41, 56],
      [25, 34, 5546],
      [15, 24, 4015],
      [15, 10, 5534],
      [22, 28, 6069],
      [10, 32, 7648],
      [38, 31, 9526],
      [25, 22, 5947],
      [43, 17, 9284],
      [2, 12, 9845],
      [34, 3, 7559],
      [15, 18, 8293],
      [0, 39, 9931],
      [8, 19, 4489],
      [7, 32, 7431],
      [1, 38, 4473],
      [33, 24, 735],
      [5, 15, 8882],
      [25, 4, 6291],
      [37, 23, 2505],
      [6, 12, 2438],
      [43, 11, 3322],
      [10, 26, 4438],
      [33, 39, 742],
      [20, 42, 1421],
      [26, 15, 687],
      [2, 41, 3784],
      [1, 29, 3847],
      [29, 14, 8392],
      [17, 4, 9259],
      [11, 13, 7906],
      [39, 37, 6925],
      [40, 39, 9839],
      [28, 17, 2522],
      [21, 20, 2239],
      [37, 15, 5049],
      [5, 42, 5831],
      [39, 11, 5394],
      [5, 13, 2965],
      [43, 16, 5934],
      [40, 20, 6531],
      [6, 2, 4901],
      [30, 33, 8880],
      [38, 34, 4144],
      [29, 2, 7765],
      [30, 17, 325],
      [9, 22, 7848],
      [21, 41, 2797],
      [29, 6, 5805],
      [25, 31, 7800],
      [19, 24, 7379],
      [27, 3, 5381],
      [17, 37, 2216],
      [0, 31, 4620],
      [16, 31, 4378],
      [15, 27, 5032],
      [22, 42, 8921],
      [13, 3, 4899],
      [43, 18, 9414],
      [14, 7, 4498],
      [4, 39, 232],
      [41, 31, 7849],
      [26, 2, 5098],
      [29, 8, 3881],
      [37, 28, 3230],
      [13, 23, 4029],
      [0, 5, 122],
      [5, 11, 6024],
      [31, 43, 8883],
      [35, 10, 1016],
      [21, 11, 9467],
      [12, 24, 9575],
      [13, 5, 8191],
      [27, 28, 4841],
      [37, 5, 4093],
      [27, 43, 6960],
      [14, 8, 834],
      [38, 10, 3128],
      [34, 11, 8003],
      [13, 41, 438],
      [1, 18, 6104],
      [39, 14, 2129],
      [22, 33, 6087],
      [19, 41, 270],
      [34, 38, 4091],
      [11, 37, 110],
      [16, 33, 8300],
      [30, 6, 4252],
      [40, 1, 1598],
      [4, 38, 9520],
      [33, 27, 8155],
      [8, 23, 8303],
      [3, 16, 7472],
      [8, 15, 1888],
      [21, 44, 1177],
      [44, 19, 7239],
      [14, 30, 4675],
      [9, 44, 7992],
      [34, 10, 5715],
      [7, 31, 7867],
      [12, 11, 2534],
      [22, 27, 8324],
      [21, 14, 6810],
      [1, 36, 2336],
      [37, 10, 8630],
      [22, 10, 3427],
      [12, 23, 9258],
      [37, 18, 9086],
      [34, 39, 6438],
      [2, 34, 5887],
      [33, 11, 865],
      [10, 31, 2703],
      [32, 13, 5734],
      [27, 35, 3330],
      [40, 9, 361],
      [34, 12, 7422],
      [7, 13, 7905],
      [43, 34, 4157],
      [43, 20, 4073],
      [29, 4, 3064],
      [14, 40, 5821],
      [10, 14, 7456],
      [27, 22, 5850],
      [1, 19, 4672],
      [29, 39, 1678],
      [19, 33, 942],
      [28, 41, 2983],
      [31, 40, 1917],
      [18, 14, 204],
      [22, 24, 3391],
      [27, 5, 4738],
      [7, 19, 8417],
      [44, 33, 3838],
      [14, 27, 5285],
      [25, 41, 5775],
      [42, 24, 4863],
      [11, 31, 2572],
      [9, 31, 9910],
      [32, 26, 6576],
      [8, 16, 3298],
      [39, 5, 2870],
      [39, 13, 6098],
      [3, 10, 8379],
      [29, 19, 9368],
      [16, 29, 7623],
      [15, 12, 6273],
      [13, 31, 3338],
      [9, 3, 9786],
      [29, 23, 8632],
      [14, 25, 3253],
      [37, 44, 7062],
      [17, 18, 7331],
      [32, 6, 1602],
      [24, 33, 8360],
      [30, 37, 101],
      [21, 18, 3267],
      [35, 38, 7197],
      [21, 4, 6160],
      [25, 36, 4223],
      [28, 38, 6500],
      [0, 37, 8670],
      [0, 20, 7064],
      [22, 31, 7458],
      [26, 3, 3586],
      [6, 43, 8307],
      [41, 34, 694],
      [34, 42, 4135],
      [23, 26, 6876],
      [11, 12, 5928],
      [12, 1, 4536],
      [14, 5, 3673],
      [42, 2, 9621],
      [8, 11, 4923],
      [43, 42, 3534],
      [32, 2, 2226],
      [24, 28, 6018],
      [25, 8, 3835],
      [20, 19, 3033],
      [17, 44, 6037],
      [13, 17, 1801],
      [7, 17, 1087],
      [25, 42, 2850],
      [28, 42, 9111],
      [0, 25, 8613],
      [6, 10, 9188],
      [23, 11, 9918],
      [17, 1, 6581],
      [10, 8, 2545],
      [21, 2, 930],
      [39, 3, 5468],
      [31, 3, 2770],
      [36, 31, 5424],
      [38, 41, 6162],
      [39, 35, 2235],
      [28, 32, 1187],
      [43, 39, 9336],
      [4, 7, 3473],
      [12, 31, 2853],
      [24, 32, 208],
      [15, 2, 7003],
      [37, 14, 263],
      [38, 43, 2884],
      [0, 41, 7055],
      [15, 21, 911],
      [40, 37, 8978],
      [36, 14, 8171],
      [1, 37, 4060],
      [20, 3, 4813],
      [32, 40, 8066],
      [21, 5, 4345],
      [35, 6, 1915],
      [34, 24, 5019],
      [11, 1, 7441],
      [19, 17, 2095],
      [36, 20, 9970],
      [28, 40, 3646],
      [18, 29, 6512],
      [32, 17, 8487],
      [15, 33, 3915],
      [38, 29, 5864],
      [43, 2, 1057],
      [23, 29, 4198],
      [35, 44, 2661],
      [39, 7, 6512],
      [35, 4, 1825],
      [37, 12, 1971],
      [2, 13, 5299],
      [15, 43, 4531],
      [0, 33, 6748],
      [14, 38, 8998],
      [34, 14, 4623],
      [18, 11, 5509],
      [40, 27, 8840],
      [7, 4, 2933],
      [25, 37, 8428],
      [5, 14, 9252],
      [6, 14, 3516],
      [33, 41, 3675],
      [24, 9, 8741],
      [38, 9, 4886],
      [31, 17, 3142],
      [26, 21, 3725],
      [8, 24, 7806],
      [27, 36, 2669],
      [38, 17, 2704],
      [18, 24, 9705],
      [29, 31, 9494],
      [6, 31, 2359],
      [13, 39, 8934],
      [30, 1, 2589],
      [44, 23, 7397],
      [34, 15, 1593],
      [36, 23, 3400],
      [26, 42, 173],
      [22, 13, 8283],
      [6, 20, 9120],
      [4, 21, 3761],
      [6, 17, 3286],
      [12, 22, 876],
      [42, 27, 4480],
      [37, 7, 3328],
      [42, 4, 5099],
      [19, 11, 2579],
      [36, 1, 200],
      [39, 15, 2326],
      [16, 35, 451],
      [42, 40, 8176],
      [11, 18, 8898],
      [29, 42, 5015],
      [10, 43, 1407],
      [18, 27, 3816],
      [39, 0, 1986],
      [17, 21, 1274],
      [26, 24, 7942],
      [11, 32, 4663],
      [37, 39, 6734],
      [27, 14, 3553],
      [4, 5, 5905],
      [11, 40, 750],
      [6, 44, 9522],
      [9, 14, 8439],
      [1, 34, 3684],
      [30, 27, 5325],
      [42, 20, 1126],
      [13, 2, 3175],
      [28, 27, 5315],
      [7, 20, 4953],
      [35, 2, 4575],
      [43, 0, 8807],
      [2, 23, 4119],
      [23, 28, 8558],
      [39, 22, 2650],
      [41, 28, 2878],
      [41, 23, 7640],
      [11, 6, 2315],
      [40, 31, 5356],
      [44, 12, 3322],
      [18, 34, 9863],
      [10, 20, 3454],
      [40, 4, 7150],
      [33, 6, 5933],
      [24, 1, 2157],
      [22, 23, 8220],
      [20, 16, 1208],
      [37, 13, 1990],
      [41, 33, 1728],
      [14, 12, 2025],
      [37, 31, 9222],
      [38, 27, 2951],
      [25, 40, 9464],
      [39, 30, 4019],
      [12, 19, 2357],
      [0, 18, 7067],
      [35, 24, 9920],
      [40, 7, 5070],
      [44, 34, 6601],
      [20, 7, 7585],
      [37, 20, 1531],
      [0, 27, 483],
      [29, 34, 384],
      [19, 1, 4443],
      [13, 35, 5537],
      [10, 44, 9167],
      [23, 25, 1986],
      [27, 38, 3122],
      [37, 40, 2902],
      [17, 33, 7104],
      [12, 38, 8342],
      [29, 44, 5197],
      [18, 7, 9475],
      [8, 25, 3984],
      [9, 13, 727],
      [44, 9, 4335],
      [42, 21, 1497],
      [33, 19, 4697],
      [27, 24, 9729],
      [32, 29, 4048],
      [43, 44, 3478],
      [17, 19, 9782],
      [19, 31, 63],
      [30, 7, 1807],
      [20, 4, 794],
      [38, 25, 6425],
      [3, 18, 9907],
      [18, 10, 959],
      [10, 34, 7467],
      [28, 18, 7121],
      [38, 44, 9150],
      [6, 27, 4460],
      [26, 37, 9273],
      [17, 26, 5707],
      [43, 36, 6928],
      [33, 18, 9298],
      [34, 30, 2553],
      [44, 1, 71],
      [33, 0, 6041],
      [34, 29, 5208],
      [2, 7, 8543],
      [14, 26, 386],
      [0, 6, 8744],
      [35, 37, 4994],
      [7, 24, 446],
      [3, 28, 2119],
      [12, 36, 3243],
      [7, 37, 6610],
      [34, 35, 3778],
      [29, 20, 6188],
      [27, 42, 327],
      [19, 36, 5708],
      [13, 11, 3700]
    ],
    32,
    22,
    5
  )
);
// 1884

console.log(
  findCheapestPrice(
    19,
    [
      [12, 6, 9120],
      [5, 3, 6305],
      [6, 9, 5757],
      [12, 2, 9296],
      [2, 15, 2503],
      [11, 5, 7473],
      [1, 0, 1806],
      [2, 18, 407],
      [4, 17, 3036],
      [1, 7, 1971],
      [8, 10, 5260],
      [6, 7, 9271],
      [8, 5, 87],
      [5, 12, 3490],
      [16, 18, 5759],
      [6, 3, 9181],
      [10, 2, 5590],
      [16, 9, 2866],
      [11, 9, 4113],
      [12, 9, 5815],
      [7, 14, 8470],
      [2, 4, 1838],
      [13, 10, 2900],
      [15, 3, 5880],
      [5, 17, 5177],
      [14, 15, 3576],
      [4, 7, 2795],
      [18, 10, 5033],
      [3, 10, 8002],
      [18, 3, 5551],
      [13, 3, 7171],
      [6, 4, 3086],
      [11, 14, 5277],
      [8, 9, 8216],
      [2, 13, 525],
      [6, 12, 6198],
      [14, 13, 4192],
      [7, 6, 6332],
      [11, 18, 4781],
      [10, 9, 3996],
      [4, 15, 1327],
      [6, 15, 9727],
      [2, 6, 2227],
      [9, 16, 1820],
      [11, 6, 6776],
      [1, 9, 2721],
      [8, 13, 6483],
      [10, 3, 4586],
      [0, 11, 1684],
      [6, 11, 9668],
      [16, 4, 2157],
      [12, 5, 2524],
      [8, 3, 7750],
      [10, 13, 6975],
      [3, 16, 4603],
      [17, 0, 1790],
      [14, 17, 9553],
      [17, 9, 6545],
      [9, 1, 440],
      [8, 15, 8265],
      [18, 1, 4908],
      [4, 6, 4560],
      [13, 14, 3042],
      [7, 1, 4961],
      [1, 18, 883],
      [12, 8, 7310],
      [0, 6, 2992],
      [1, 15, 2261],
      [5, 8, 3832],
      [15, 13, 3321],
      [9, 10, 1885],
      [0, 2, 1359],
      [4, 13, 7144],
      [15, 9, 9000],
      [13, 5, 5784],
      [9, 7, 87],
      [15, 16, 6607],
      [13, 18, 1150],
      [12, 16, 6851],
      [8, 17, 2537],
      [2, 12, 5470],
      [11, 8, 1505],
      [7, 2, 5769],
      [17, 2, 1585],
      [2, 11, 7212],
      [7, 5, 1251],
      [11, 0, 2392],
      [9, 17, 2707],
      [17, 16, 5007],
      [11, 17, 2818],
      [14, 3, 623],
      [14, 0, 5915],
      [0, 12, 4296],
      [3, 9, 6142],
      [5, 4, 8812],
      [11, 1, 5634],
      [12, 7, 3678],
      [0, 3, 1482],
      [10, 6, 3571],
      [13, 1, 5295],
      [0, 4, 798],
      [18, 12, 5395],
      [5, 6, 9385],
      [10, 0, 3693],
      [8, 12, 8872],
      [4, 2, 8781],
      [14, 2, 5396],
      [13, 7, 8441],
      [5, 11, 7113],
      [16, 11, 2038],
      [14, 7, 9813],
      [18, 0, 9600],
      [9, 15, 5714],
      [3, 5, 3892],
      [11, 7, 6940],
      [14, 12, 7174],
      [15, 4, 2500],
      [7, 13, 2518],
      [16, 17, 5683],
      [9, 4, 3966],
      [10, 14, 8593],
      [4, 12, 8513],
      [5, 9, 928]
    ],
    12,
    4,
    4
  )
);
// 6496
