// brute force
// for 1<= i < j <= n
// max( min (ai, aj) * (j - i) )

// even we do some optimization,
// it is still brute force sol
var maxArea = function(height) {
  const n = height.length;
  let highest = -1;
  let max = 0;
  for (let i = 0; i < n; i++) {
    const h1 = height[i];
    if (h1 < highest) continue;
    if (h1 > highest) highest = h1;
    for (let j = i + 1; j < n; j++) {
      const h2 = height[j];
      const area = Math.min(h1, h2) * (j - i);
      if (area > max) {
        // console.log('tt', i, j, area);
        max = area;
      }
    }
  }
  return max;
};

var maxArea = function(h) {
  const n = h.length;
  let max = 0;
  let l = 0;
  let r = n - 1;
  while (l < r) {
    max = Math.max(max, (r - l) * Math.min(h[l], h[r]));
    if (h[l] < h[r]) {
      l++;
    } else {
      r--;
    }
  }
  return max;
};

// console.log(maxArea([1, 1])); // 1

// console.log(maxArea([1, 2, 3])); // 2

// console.log(maxArea([2, 1, 3])); // 4

// console.log(maxArea([2, 1, 3, 4])); // 6

console.log(
  maxArea([
    15000,
    14999,
    14998,
    14997,
    14996,
    14995,
    14994,
    14993,
    14992,
    14991,
    14990,
    14989,
    14988,
    14987,
    14986,
    14985,
    14984,
    14983,
    14982,
    14981,
    14980,
    14979,
    14978,
    14977,
    14976,
    14975,
    14974,
    14973,
    14972,
    14971,
    14970,
    14969,
    14968,
    14967,
    14966,
    14965,
    14964,
    14963,
    14962,
    14961,
    14960,
    14959,
    14958,
    14957,
    14956,
    14955,
    14954,
    14953,
    14952,
    14951,
    14950,
    14949,
    14948,
    14947,
    14946,
    14945,
    14944,
    14943,
    14942,
    14941,
    14940,
    14939,
    14938,
    14937,
    14936,
    14935,
    14934,
    14933,
    14932,
    14931,
    14930,
    14929,
    14928,
    14927,
    14926,
    14925,
    14924,
    14923,
    14922,
    14921,
    14920,
    14919,
    14918,
    14917,
    14916,
    14915,
    14914,
    14913,
    14912,
    14911,
    14910,
    14909,
    14908,
    14907,
    14906,
    14905,
    14904,
    14903,
    14902,
    14901,
    14900,
    14899,
    14898,
    14897,
    14896,
    14895,
    14894,
    14893,
    14892,
    14891,
    14890,
    14889,
    14888,
    14887,
    14886,
    14885,
    14884,
    14883,
    14882,
    14881,
    14880,
    14879,
    14878,
    14877,
    14876,
    14875,
    14874,
    14873,
    14872,
    14871,
    14870,
    14869,
    14868,
    14867,
    14866,
    14865,
    14864,
    14863,
    14862,
    14861,
    14860,
    14859,
    14858,
    14857,
    14856,
    14855,
    14854,
    14853,
    14852,
    14851,
    14850,
    14849,
    14848,
    14847,
    14846,
    14845,
    14844,
    14843,
    14842,
    14841,
    14840,
    14839,
    14838,
    14837,
    14836,
    14835,
    14834,
    14833,
    14832,
    14831,
    14830,
    14829,
    14828,
    14827,
    14826,
    14825,
    14824,
    14823,
    14822,
    14821,
    14820,
    14819,
    14818,
    14817,
    14816,
    14815,
    14814,
    14813,
    14812,
    14811,
    14810,
    14809,
    14808,
    14807,
    14806,
    14805,
    14804,
    14803,
    14802,
    14801,
    14800,
    14799,
    14798,
    14797,
    14796,
    14795,
    14794,
    14793,
    14792,
    14791,
    14790,
    14789,
    14788,
    14787,
    14786,
    14785,
    14784,
    14783,
    14782,
    14781,
    14780,
    14779,
    14778,
    14777,
    14776,
    14775,
    14774,
    14773,
    14772,
    14771,
    14770,
    14769,
    14768,
    14767,
    14766,
    14765,
    14764,
    14763,
    14762,
    14761,
    14760,
    14759,
    14758,
    14757,
    14756,
    14755,
    14754,
    14753,
    14752,
    14751,
    14750,
    14749,
    14748,
    14747,
    14746,
    14745,
    14744,
    14743,
    14742,
    14741,
    14740
  ])
); // 3832400
